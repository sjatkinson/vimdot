set hidden
set autoindent
set ruler
set number
set ignorecase
set expandtab 
set softtabstop=4
set shiftwidth=4
set autoindent
set path +=**

syntax on
syntax enable
filetype plugin indent on


set mouse=nvi
set mousemodel=popup

autocmd! bufwritepost .vimrc source ~/.vimrc
silent! colorscheme tomorrow-night
set background=dark


function! CurDir()
    let curdir = substitute(getcwd(), $HOME, "~", "")
    return curdir
endfunction

set laststatus=2                              " always a status line
set statusline=%F                             " full path to file
set statusline+=\ \ \ [%{&ff}]                " file format
set statusline+=\ %y                          " filetype
set statusline+=\ %m                          " modified?
set statusline+=\ %r                          " readonly?
set statusline+=\ \ \ pwd:%(%{CurDir()}%)     " the current vim directory
set statusline+=%=%-10.(%l,%c%V%)\ %p%%/%L    " line,column  %/num lines

let mapleader=','
map <leader>cd :lcd %:h<CR>

map <F1> <Esc>
imap <F1> <Esc>

" Smart indenting - insert a tab if we're at the beginning of a line. Else, do completion.
function! InsertTabWrapper()
   let col = col('.') - 1
   if !col || getline('.')[col - 1] !~ '\k'
      return "\<tab>"
   else
      return "\<c-p>"
   endif
endfunction
inoremap <tab> <c-r>=InsertTabWrapper()<cr>

autocmd Filetype ruby setlocal ts=2 sts=2 sw=2 expandtab

set tags=./tags;

cnoremap %% <C-R>=expand('%:h').'/'<cr>
map <leader>e :edit %%

autocmd StdinReadPre * let s:std_in=1

map <C-f> :Explore<CR>
let g:netrw_liststyle=3

exec "set listchars=tab:\uBB\uBB,trail:\uB7,nbsp:~"
autocmd BufNewFile,BufRead *.cpp,*.h,*.py setlocal list

"=====[ Show help files in a new tab, plus add a shortcut for helpg ]==============

let g:help_in_tabs = 1

nmap <silent> H  :let g:help_in_tabs = !g:help_in_tabs<CR>

"Only apply to .txt files...
augroup HelpInTabs
    autocmd!

    autocmd BufEnter  *.txt   call HelpInNewTab()
augroup END

"Only apply to help files...
function! HelpInNewTab ()
    if &buftype == 'help' && g:help_in_tabs
        "Convert the help window to a tab...
        execute "normal \<C-W>T"
    endif
endfunction


